Post exploitation: careful on commands for opsec purposes. 

House keeping: 
- sleep, spawnto, jobs, ppid <-- configure beacon

API-Only: uses Win API calls:
-cd, ls, cp, mv,ps, pwd, rm and upload

Inline execution:
- inline-execution used to load BOF's
- some examples of beacon commands as bofs are dlload, getsystem and timestomp


Session Passing


Executing Custom Tools

Powershell
3 ways to execute Powershell in beacon
- 1. powershell command (can use powershell-import to import cmdlets as well: makes use of powershell.exe similiar to shell command and use of cmd.exe. Encodes command before sending can be modified in a agressor scripts.
- 2. powerpick makes use of unmanaged powershell and its api. It is a fork and run command which starts beacon spawnto process.
- 3. psinject similiar to powerpick but allows using a existing process vs spawning into a new one.

powershell-import c:\path_to_script
- powershell-import C:\Tools\PowerSploit\Recon\PowerView.ps1

.NET
execute-assembly command uses a reflective dll to load and host the comnand language runtine and executes .net assembly from memory.
example: execute-assembly C:\Tools\Seatbelt\Seatbelt\bin\Release\Seatbelt.exe AntiVirus <-- check for host based av

BOF's
inline-execute path _to_bof args
situational awareness bofs from trusted sec: https://github.com/trustedsec/CS-Situational-Awareness-BOF
